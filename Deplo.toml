# common settings
[common]
project_name = "deplo"
debug = { ghaction_deplo_debugger = "on", ghaction_job_debugger = "on" }

[common.release_targets]
nightly = { type = "Branch", path = "main" }
lab = { type = "Branch", path = "lab" }
prod = { type = "Tag", path = "[0-9]*" }


# version control system account settings
[vcs]
type = "Github"
email = "${SUNTOMI_VCS_ACCOUNT_EMAIL}"
account = "${SUNTOMI_VCS_ACCOUNT}"
key = "${SUNTOMI_VCS_ACCOUNT_KEY}"


# ci account setting, default should always be set
[ci.accounts.default]
type = "GhAction"
account = "${SUNTOMI_VCS_ACCOUNT}"
key = "${SUNTOMI_VCS_ACCOUNT_KEY}"


# workflow settings (CI)
[ci.workflow.integrate.base]
patterns = ["tools/docker/Dockerfile.base"]
runner = { type = "Machine", os = "Linux", local_fallback = { image = "docker:20.10", shell = "sh" } }
command = """
docker build -t ghcr.io/suntomi/deplo:base -f tools/docker/Dockerfile.base tools/docker
"""

[ci.workflow.integrate.builder]
patterns = ["tools/docker/Dockerfile.builder", "Cargo.*"]
runner = { type = "Machine", os = "Linux", local_fallback = { image = "docker:20.10", shell = "sh" } }
command = """
sh tools/scripts/copy_manifests.sh
docker build -t ghcr.io/suntomi/deplo:builder -f tools/docker/Dockerfile.builder tools/docker
"""

[ci.workflow.integrate.src]
patterns = [".*/src/.*", "Cargo.*"]
runner = { type = "Machine", os = "Linux", local_fallback = { image = "ghcr.io/suntomi/deplo:builder" } }
command = "cargo build"
[ci.workflow.integrate.src.caches.cargo]
keys = ["integrate-build-${{ runner.os }}-v1-${{ hashFiles('**/Cargo.lock') }}"]
paths = ["target", "~/.cargo/bin", "~/.cargo/registry/cache", "~/.cargo/registry/index", "~./cargo/git/db"]


# workflow settings (CD)
[ci.workflow.deploy.base]
patterns = ["tools/docker/Dockerfile.base"]
runner = { type = "Machine", os = "Linux", local_fallback = { image = "docker:20.10", shell = "sh" } }
command = """
docker build -t ghcr.io/suntomi/deplo:base -f tools/docker/Dockerfile.base tools/docker
echo ${SUNTOMI_VCS_ACCOUNT_KEY} | docker login ghcr.io -u ${SUNTOMI_VCS_ACCOUNT} --password-stdin
docker push ghcr.io/suntomi/deplo:base
"""

[ci.workflow.deploy.builder]
patterns = ["tools/docker/Dockerfile.builder", "Cargo.*"]
runner = { type = "Machine", os = "Linux", local_fallback = { image = "docker:20.10", shell = "sh" } }
command = """
sh tools/scripts/copy_manifests.sh
docker build -t ghcr.io/suntomi/deplo:builder -f tools/docker/Dockerfile.builder tools/docker
echo ${SUNTOMI_VCS_ACCOUNT_KEY} | docker login ghcr.io -u ${SUNTOMI_VCS_ACCOUNT} --password-stdin
docker push ghcr.io/suntomi/deplo:builder
"""

[ci.workflow.deploy.vmfb]
patterns = ["tools/docker/Dockerfile.vmfb"]
runner = { type = "Machine", os = "Linux", local_fallback = { image = "docker:20.10", shell = "sh" } }
command = """
docker build -t ghcr.io/suntomi/deplo:vmfb -f tools/docker/Dockerfile.vmfb tools/docker
echo ${SUNTOMI_VCS_ACCOUNT_KEY} | docker login ghcr.io -u ${SUNTOMI_VCS_ACCOUNT} --password-stdin
docker push ghcr.io/suntomi/deplo:vmfb
"""

[ci.workflow.deploy.product]
depends = ["builder"]
patterns = [".*/src/.*", "Cargo.*"]
runner = { type = "Machine", os = "Linux", local_fallback = { image = "ghcr.io/suntomi/deplo:vmfb", shell = "sh"  } }
command = """
set -e
mkdir -p tools/docker/bin
. tools/scripts/setup_release_env.sh
sh tools/scripts/build_linux.sh
docker build -t ghcr.io/suntomi/deplo:${DEPLO_RELEASE_VERSION} -f tools/docker/Dockerfile tools/docker
echo ${SUNTOMI_VCS_ACCOUNT_KEY} | docker login ghcr.io -u ${SUNTOMI_VCS_ACCOUNT} --password-stdin
docker push ghcr.io/suntomi/deplo:${DEPLO_RELEASE_VERSION}
deplo vcs release ${DEPLO_RELEASE_TAG} -o name=${DEPLO_RELEASE_NAME}
deplo vcs release-assets ${DEPLO_RELEASE_TAG} tools/docker/bin/cli --replace -o name=deplo-Linux
"""

[ci.workflow.deploy.mac]
depends = ["product"]
patterns = [".*/src/.*", "Cargo.*"]
runner = { type = "Machine", os = "MacOS" }
command = """
. tools/scripts/setup_release_env.sh
cargo build --release
deplo vcs release-assets ${DEPLO_RELEASE_TAG} target/release/cli --replace -o name=deplo-Darwin
"""
[ci.workflow.deploy.mac.caches.cargo]
keys = ["integrate-build-${{ runner.os }}-v1-${{ hashFiles('**/Cargo.lock') }}"]
paths = ["target", "~/.cargo/bin", "~/.cargo/registry/cache", "~/.cargo/registry/index", "~./cargo/git/db"]

[ci.workflow.deploy.win]
depends = ["product"]
patterns = [".*/src/.*", "Cargo.*"]
runner = { type = "Machine", os = "Windows" }
command = """
. tools/scripts/setup_release_env.sh
cargo build --release
deplo vcs release-assets ${DEPLO_RELEASE_TAG} target/release/cli --replace -o name=deplo-Windows.exe
deplo vcs release-assets ${DEPLO_RELEASE_TAG} target/release/cli.pdb --replace -o name=deplo-Windows.pdb
"""
[ci.workflow.deploy.win.caches.cargo]
keys = ["integrate-build-${{ runner.os }}-v1-${{ hashFiles('**/Cargo.lock') }}"]
paths = ["target", "~/.cargo/bin", "~/.cargo/registry/cache", "~/.cargo/registry/index", "~./cargo/git/db"]
