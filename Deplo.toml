# ---------------
# common settings
# ---------------

[common]
project_name = "deplo"
debug = { ghaction_deplo_debugger = "on", ghaction_job_debugger = "on" }

# release target branch settings
[common.release_targets]
# main branch will be released as nightly
nightly = { type = "Branch", path = "main" }
lab = { type = "Branch", path = "lab" }
# tag which name is started with numerals treated as release (eg. 0.1.10)
prod = { type = "Tag", path = "[0-9]*" }

# ------------
# vcs settings
# ------------

# version control system account settings
[vcs]
type = "Github"
email = "${SUNTOMI_VCS_ACCOUNT_EMAIL}"
account = "${SUNTOMI_VCS_ACCOUNT}"
key = "${SUNTOMI_VCS_ACCOUNT_KEY}"


# ------------
# ci settings
# ------------

# ci account setting, default should always be set
[ci.accounts.default]
type = "GhAction"
account = "${SUNTOMI_VCS_ACCOUNT}"
key = "${SUNTOMI_VCS_ACCOUNT_KEY}"


# ------------
# job settings
# ------------

# workflow settings (CI), which runs when branch that has related pull request to release targets created/updated.
# declare job name `$job_name` like ci.workflow.integrate.$job_name, as table element of toml
[ci.workflow.integrate.base]
# git's changeset pattern to invoke the job. that is, integrate.base only invoked when tools/docker/Dockerfile.base is
# changed by commit.
patterns = ["tools/docker/Dockerfile.base"]
# you can set local_fallback container image. if its set, command will be executed on container of `local_fallback.image`,
# with using shell `local_fallback.shell`, if local machine's OS does not matched runner.os.
runner = { type = "Machine", os = "Linux", local_fallback = { image = "docker:20.10", shell = "sh" } }
command = """
docker build -t ghcr.io/suntomi/deplo:base -f tools/docker/Dockerfile.base tools/docker
"""

[ci.workflow.integrate.builder]
patterns = ["tools/docker/Dockerfile.builder", "Cargo.*"]
runner = { type = "Machine", os = "Linux", local_fallback = { image = "docker:20.10", shell = "sh" } }
command = """
sh tools/scripts/copy_manifests.sh
docker build -t ghcr.io/suntomi/deplo:builder -f tools/docker/Dockerfile.builder tools/docker
"""

[ci.workflow.integrate.src]
patterns = [".*/src/.*", "Cargo.*"]
runner = { type = "Machine", os = "Linux", local_fallback = { image = "ghcr.io/suntomi/deplo:builder" } }
command = "cargo build"
tasks = { test = "cargo test", home = "echo ${HOME}" }
# cache settings. file paths that is listed in paths will be preserved with tha key `keys[0]`.
# if you specify multiple keys, `keys[1..]` are used as fallback keys to search similar caches 
# that is craeted by other branches.
[ci.workflow.integrate.src.caches.cargo]
# way to use variable like ${{ runner.os }} in the keys, is CI service specific. please consult each CI service's
# document for detail.
keys = ["integrate-build-${{ runner.os }}-v1-${{ hashFiles('**/Cargo.lock') }}"]
paths = ["target", "~/.cargo/bin", "~/.cargo/registry/cache", "~/.cargo/registry/index", "~/.cargo/git/db"]


# workflow settings (CD), which runs when release target branches are created/updated
# declare job name `$job_name` like ci.workflow.deploy.$job_name, as table element of toml
[ci.workflow.deploy.base]
patterns = ["tools/docker/Dockerfile.base"]
runner = { type = "Machine", os = "Linux", local_fallback = { image = "docker:20.10", shell = "sh" } }
command = """
docker build -t ghcr.io/suntomi/deplo:base -f tools/docker/Dockerfile.base tools/docker
echo ${SUNTOMI_VCS_ACCOUNT_KEY} | docker login ghcr.io -u ${SUNTOMI_VCS_ACCOUNT} --password-stdin
docker push ghcr.io/suntomi/deplo:base
"""

[ci.workflow.deploy.builder]
patterns = ["tools/docker/Dockerfile.builder", "Cargo.*"]
runner = { type = "Machine", os = "Linux", local_fallback = { image = "docker:20.10", shell = "sh" } }
command = """
sh tools/scripts/copy_manifests.sh
docker build -t ghcr.io/suntomi/deplo:builder -f tools/docker/Dockerfile.builder tools/docker
echo ${SUNTOMI_VCS_ACCOUNT_KEY} | docker login ghcr.io -u ${SUNTOMI_VCS_ACCOUNT} --password-stdin
docker push ghcr.io/suntomi/deplo:builder
"""

[ci.workflow.deploy.vmfb]
patterns = ["tools/docker/Dockerfile.vmfb"]
runner = { type = "Machine", os = "Linux", local_fallback = { image = "docker:20.10", shell = "sh" } }
command = """
docker build -t ghcr.io/suntomi/deplo:vmfb -f tools/docker/Dockerfile.vmfb tools/docker
echo ${SUNTOMI_VCS_ACCOUNT_KEY} | docker login ghcr.io -u ${SUNTOMI_VCS_ACCOUNT} --password-stdin
docker push ghcr.io/suntomi/deplo:vmfb
"""

[ci.workflow.deploy.product]
# job dependencies. deploy.product only starts to run after deploy.builder finished.
depends = ["builder"]
patterns = [".*/src/.*", "Cargo.*"]
runner = { type = "Machine", os = "Linux", local_fallback = { image = "ghcr.io/suntomi/deplo:vmfb", shell = "sh"  } }
command = """
set -e
mkdir -p tools/docker/bin
. tools/scripts/setup_release_env.sh
sh tools/scripts/build_linux.sh
docker build -t ghcr.io/suntomi/deplo:${DEPLO_RELEASE_VERSION} -f tools/docker/Dockerfile tools/docker
echo ${SUNTOMI_VCS_ACCOUNT_KEY} | docker login ghcr.io -u ${SUNTOMI_VCS_ACCOUNT} --password-stdin
docker push ghcr.io/suntomi/deplo:${DEPLO_RELEASE_VERSION}
deplo vcs release ${DEPLO_RELEASE_TAG} -o name=${DEPLO_RELEASE_NAME}
deplo vcs release-assets ${DEPLO_RELEASE_TAG} tools/docker/bin/cli --replace -o name=deplo-Linux
"""

[ci.workflow.deploy.latest]
depends = ["product"]
# latest tag of docker image is only updated when production release is created.
for_targets = ["prod"]
patterns = [".*/src/.*", "Cargo.*"]
runner = { type = "Machine", os = "Linux", local_fallback = { image = "docker:20.10", shell = "sh" } }
command = """
. tools/scripts/setup_release_env.sh
echo ${SUNTOMI_VCS_ACCOUNT_KEY} | docker login ghcr.io -u ${SUNTOMI_VCS_ACCOUNT} --password-stdin
docker pull ghcr.io/suntomi/deplo:${DEPLO_RELEASE_VERSION}
docker tag ghcr.io/suntomi/deplo:${DEPLO_RELEASE_VERSION} ghcr.io/suntomi/deplo:latest
docker push ghcr.io/suntomi/deplo:latest
"""

[ci.workflow.deploy.mac]
depends = ["product"]
patterns = [".*/src/.*", "Cargo.*"]
runner = { type = "Machine", os = "MacOS" }
command = """
. tools/scripts/setup_release_env.sh
cargo build --release
deplo vcs release-assets ${DEPLO_RELEASE_TAG} target/release/cli --replace -o name=deplo-Darwin
"""
[ci.workflow.deploy.mac.caches.cargo]
keys = ["integrate-build-${{ runner.os }}-v1-${{ hashFiles('**/Cargo.lock') }}"]
paths = ["target", "~/.cargo/bin", "~/.cargo/registry/cache", "~/.cargo/registry/index", "~/.cargo/git/db"]

[ci.workflow.deploy.win]
depends = ["product"]
patterns = [".*/src/.*", "Cargo.*"]
runner = { type = "Machine", os = "Windows" }
command = """
. tools/scripts/setup_release_env.sh
cargo build --release
deplo vcs release-assets ${DEPLO_RELEASE_TAG} target/release/cli.exe --replace -o name=deplo-Windows.exe
deplo vcs release-assets ${DEPLO_RELEASE_TAG} target/release/cli.pdb --replace -o name=deplo-Windows.pdb
"""
[ci.workflow.deploy.win.caches.cargo]
keys = ["integrate-build-${{ runner.os }}-v1-${{ hashFiles('**/Cargo.lock') }}"]
paths = ["target", "~/.cargo/bin", "~/.cargo/registry/cache", "~/.cargo/registry/index", "~/.cargo/git/db"]
