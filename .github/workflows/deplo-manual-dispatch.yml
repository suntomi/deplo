# generated by deplo CLI https://github.com/suntomi/deplo don't edit by hand.
name: manual-dispatch

on: 
  workflow_dispatch:
    foo:
      required: 'true'
  

env:
  DEPLO_GHACTION_CI_ID: ${{ github.run_id }}-${{ github.run_attempt }}
  DEPLO_GHACTION_EVENT_DATA: ${{ toJson(github) }}
  DEPLO_GHACTION_WORKFLOW_NAME: ${{ github.workflow }}
  DEPLO_OVERWRITE_VERBOSITY: ${{ github.event.client_payload.exec.verbosity }}
  SUNTOMI_VCS_ACCOUNT: ${{ secrets.SUNTOMI_VCS_ACCOUNT }}
  SUNTOMI_VCS_ACCOUNT_EMAIL: ${{ secrets.SUNTOMI_VCS_ACCOUNT_EMAIL }}
  SUNTOMI_VCS_ACCOUNT_KEY: ${{ secrets.SUNTOMI_VCS_ACCOUNT_KEY }}
  SUNTOMI_VCS_APP_ID: ${{ secrets.SUNTOMI_VCS_APP_ID }}
  SUNTOMI_VCS_APP_PKEY: ${{ secrets.SUNTOMI_VCS_APP_PKEY }}
jobs:
  deplo-main:
    name: Start CI ${{ github.event.client_payload.job_id }}
    runs-on: ubuntu-latest
    outputs:
      base: ${{ steps.deplo-main.outputs.base }}
      builder: ${{ steps.deplo-main.outputs.builder }}
      config: ${{ steps.deplo-main.outputs.config }}
      latest: ${{ steps.deplo-main.outputs.latest }}
      mac: ${{ steps.deplo-main.outputs.mac }}
      product: ${{ steps.deplo-main.outputs.product }}
      test: ${{ steps.deplo-main.outputs.test }}
      win: ${{ steps.deplo-main.outputs.win }}
    steps:
      - name: Fetch deplo cli
        run: |
          curl -L https://github.com/suntomi/deplo/releases/download/nightly/deplo-Linux -o /usr/local/bin/deplo
          chmod +x /usr/local/bin/deplo
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          ref: ${{ github.event.client_payload.exec.revision }}
          submodule: true
      - name: Boot deplo
        id: deplo-main
        run: deplo boot
      - name: Setup ssh session to debug
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        with:
          sudo: true
  deplo-halt:
    name: Cleanup CI
    if: ${{ !failure() && (needs.base.outputs.need-cleanup || needs.builder.outputs.need-cleanup || needs.config.outputs.need-cleanup || needs.latest.outputs.need-cleanup || needs.mac.outputs.need-cleanup || needs.product.outputs.need-cleanup || needs.test.outputs.need-cleanup || needs.win.outputs.need-cleanup) }}
    needs: ["deplo-main","base","builder","config","latest","mac","product","test","win"]
    runs-on: ubuntu-latest
    env:
      DEPLO_JOB_SYSTEM_OUTPUT_BASE: ${{ needs.base.outputs.system }}
      DEPLO_JOB_SYSTEM_OUTPUT_BUILDER: ${{ needs.builder.outputs.system }}
      DEPLO_JOB_SYSTEM_OUTPUT_CONFIG: ${{ needs.config.outputs.system }}
      DEPLO_JOB_SYSTEM_OUTPUT_LATEST: ${{ needs.latest.outputs.system }}
      DEPLO_JOB_SYSTEM_OUTPUT_MAC: ${{ needs.mac.outputs.system }}
      DEPLO_JOB_SYSTEM_OUTPUT_PRODUCT: ${{ needs.product.outputs.system }}
      DEPLO_JOB_SYSTEM_OUTPUT_TEST: ${{ needs.test.outputs.system }}
      DEPLO_JOB_SYSTEM_OUTPUT_WIN: ${{ needs.win.outputs.system }}
    steps:
      - name: Fetch deplo cli
        run: |
          curl -L https://github.com/suntomi/deplo/releases/download/nightly/deplo-Linux -o /usr/local/bin/deplo
          chmod +x /usr/local/bin/deplo
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          lfs: false
          ref: ${{ github.event.client_payload.exec.revision }}
          submodule: true
      - name: Halt deplo
        id: deplo-halt
        run: deplo halt
      - name: Setup ssh session to debug
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        with:
          sudo: true
  base:
    needs: [deplo-main]
    if: ${{ needs.deplo-main.outputs.base && !failure() }}
    name: Running job base
    runs-on: ubuntu-latest
  
  
    outputs:
      need-cleanup: ${{ steps.deplo-job-base.outputs.need-cleanup }}
      system: ${{ steps.deplo-job-base.outputs.system }}
      user: ${{ steps.deplo-job-base.outputs.user }}
    steps:
      - name: Fetch deplo cli
        run: |
          curl -L https://github.com/suntomi/deplo/releases/download/nightly/deplo-Linux -o /usr/local/bin/deplo
          chmod +x /usr/local/bin/deplo
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          ref: ${{ github.event.client_payload.exec.revision }}
          submodule: true
  
      - name: base
        id: deplo-job-base
        run: deplo run base
      - name: Setup ssh session to debug
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        with:
          sudo: true
  builder:
    needs: [deplo-main]
    if: ${{ needs.deplo-main.outputs.builder && !failure() }}
    name: Running job builder
    runs-on: ubuntu-latest
  
  
    outputs:
      need-cleanup: ${{ steps.deplo-job-builder.outputs.need-cleanup }}
      system: ${{ steps.deplo-job-builder.outputs.system }}
      user: ${{ steps.deplo-job-builder.outputs.user }}
    steps:
      - name: Fetch deplo cli
        run: |
          curl -L https://github.com/suntomi/deplo/releases/download/nightly/deplo-Linux -o /usr/local/bin/deplo
          chmod +x /usr/local/bin/deplo
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          ref: ${{ github.event.client_payload.exec.revision }}
          submodule: true
  
      - name: builder
        id: deplo-job-builder
        run: deplo run builder
      - name: Setup ssh session to debug
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        with:
          sudo: true
  config:
    needs: [deplo-main]
    if: ${{ needs.deplo-main.outputs.config && !failure() }}
    name: Running job config
    runs-on: ubuntu-latest
  
  
    outputs:
      need-cleanup: ${{ steps.deplo-job-config.outputs.need-cleanup }}
      system: ${{ steps.deplo-job-config.outputs.system }}
      user: ${{ steps.deplo-job-config.outputs.user }}
    steps:
      - name: Fetch deplo cli
        run: |
          curl -L https://github.com/suntomi/deplo/releases/download/nightly/deplo-Linux -o /usr/local/bin/deplo
          chmod +x /usr/local/bin/deplo
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          ref: ${{ github.event.client_payload.exec.revision }}
          submodule: true
  
      - name: config
        id: deplo-job-config
        run: deplo run config
      - name: Setup ssh session to debug
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        with:
          sudo: true
  latest:
    needs: ["product","deplo-main"]
    if: ${{ needs.deplo-main.outputs.latest && !failure() }}
    name: Running job latest
    runs-on: ubuntu-latest
    env:
      DEPLO_JOB_USER_OUTPUT_PRODUCT: ${{ needs.product.outputs.user }}
  
    outputs:
      need-cleanup: ${{ steps.deplo-job-latest.outputs.need-cleanup }}
      system: ${{ steps.deplo-job-latest.outputs.system }}
      user: ${{ steps.deplo-job-latest.outputs.user }}
    steps:
      - name: Fetch deplo cli
        run: |
          curl -L https://github.com/suntomi/deplo/releases/download/nightly/deplo-Linux -o /usr/local/bin/deplo
          chmod +x /usr/local/bin/deplo
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          ref: ${{ github.event.client_payload.exec.revision }}
          submodule: true
  
      - name: latest
        id: deplo-job-latest
        run: deplo run latest
      - name: Setup ssh session to debug
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        with:
          sudo: true
  mac:
    needs: ["product","deplo-main"]
    if: ${{ needs.deplo-main.outputs.mac && !failure() }}
    name: Running job mac
    runs-on: macos-latest
    env:
      DEPLO_JOB_USER_OUTPUT_PRODUCT: ${{ needs.product.outputs.user }}
  
    outputs:
      need-cleanup: ${{ steps.deplo-job-mac.outputs.need-cleanup }}
      system: ${{ steps.deplo-job-mac.outputs.system }}
      user: ${{ steps.deplo-job-mac.outputs.user }}
    steps:
      - name: Fetch deplo cli
        run: |
          curl -L https://github.com/suntomi/deplo/releases/download/nightly/deplo-Darwin -o /usr/local/bin/deplo
          chmod +x /usr/local/bin/deplo
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          ref: ${{ github.event.client_payload.exec.revision }}
          submodule: true
      - name: Cache cargo
        id: deplo-cache-cargo
        uses: actions/cache@v2
        with:
          path: |
            target
            ~/.cargo/bin
            ~/.cargo/registry/cache
            ~/.cargo/registry/index
            ~/.cargo/git/db
          key: deploy-build-${{ runner.os }}-v1-${{ hashFiles('**/Cargo.lock') }}
          restore-keys:
            deploy-build-${{ runner.os }}-v1-
          
      - name: Mark cache result
        if: steps.deplo-cache-cargo.outputs.cache-hit == 'true'
        run: echo "DEPLO_CACHE_CARGO_HIT=true" >> $GITHUB_ENV
      - name: mac
        id: deplo-job-mac
        run: deplo run mac
      - name: Setup ssh session to debug
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        with:
          sudo: true
  product:
    needs: ["builder","deplo-main"]
    if: ${{ needs.deplo-main.outputs.product && !failure() }}
    name: Running job product
    runs-on: ubuntu-latest
    env:
      DEPLO_JOB_USER_OUTPUT_BUILDER: ${{ needs.builder.outputs.user }}
  
    outputs:
      need-cleanup: ${{ steps.deplo-job-product.outputs.need-cleanup }}
      system: ${{ steps.deplo-job-product.outputs.system }}
      user: ${{ steps.deplo-job-product.outputs.user }}
    steps:
      - name: Fetch deplo cli
        run: |
          curl -L https://github.com/suntomi/deplo/releases/download/nightly/deplo-Linux -o /usr/local/bin/deplo
          chmod +x /usr/local/bin/deplo
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          ref: ${{ github.event.client_payload.exec.revision }}
          submodule: true
  
      - name: product
        id: deplo-job-product
        run: deplo run product
      - name: Setup ssh session to debug
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        with:
          sudo: true
  test:
    needs: [deplo-main]
    if: ${{ needs.deplo-main.outputs.test && !failure() }}
    name: Running job test
    runs-on: ubuntu-latest
  
  
    outputs:
      need-cleanup: ${{ steps.deplo-job-test.outputs.need-cleanup }}
      system: ${{ steps.deplo-job-test.outputs.system }}
      user: ${{ steps.deplo-job-test.outputs.user }}
    steps:
      - name: Fetch deplo cli
        run: |
          curl -L https://github.com/suntomi/deplo/releases/download/nightly/deplo-Linux -o /usr/local/bin/deplo
          chmod +x /usr/local/bin/deplo
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          ref: ${{ github.event.client_payload.exec.revision }}
          submodule: true
      - name: Cache cargo
        id: deplo-cache-cargo
        uses: actions/cache@v2
        with:
          path: |
            target
            ~/.cargo/bin
            ~/.cargo/registry/cache
            ~/.cargo/registry/index
            ~/.cargo/git/db
          key: integrate-build-${{ runner.os }}-v1-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Mark cache result
        if: steps.deplo-cache-cargo.outputs.cache-hit == 'true'
        run: echo "DEPLO_CACHE_CARGO_HIT=true" >> $GITHUB_ENV
      - name: test
        id: deplo-job-test
        run: deplo run test
      - name: Setup ssh session to debug
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        with:
          sudo: true
  win:
    needs: ["product","deplo-main"]
    if: ${{ needs.deplo-main.outputs.win && !failure() }}
    name: Running job win
    runs-on: windows-latest
    env:
      DEPLO_JOB_USER_OUTPUT_PRODUCT: ${{ needs.product.outputs.user }}
  
    outputs:
      need-cleanup: ${{ steps.deplo-job-win.outputs.need-cleanup }}
      system: ${{ steps.deplo-job-win.outputs.system }}
      user: ${{ steps.deplo-job-win.outputs.user }}
    steps:
      - name: Fetch deplo cli
        run: |
          curl -L https://github.com/suntomi/deplo/releases/download/nightly/deplo-Windows.exe -o /usr/bin/deplo
          chmod +x /usr/bin/deplo
        shell: bash
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          ref: ${{ github.event.client_payload.exec.revision }}
          submodule: true
      - name: Cache cargo
        id: deplo-cache-cargo
        uses: actions/cache@v2
        with:
          path: |
            target
            ~/.cargo/bin
            ~/.cargo/registry/cache
            ~/.cargo/registry/index
            ~/.cargo/git/db
          key: deploy-build-${{ runner.os }}-v1-${{ hashFiles('**/Cargo.lock') }}
          restore-keys:
            deploy-build-${{ runner.os }}-v1-
          
      - name: Mark cache result
        if: steps.deplo-cache-cargo.outputs.cache-hit == 'true'
        run: echo "DEPLO_CACHE_CARGO_HIT=true" >> $GITHUB_ENV
      - name: win
        id: deplo-job-win
        run: deplo run win
        shell: bash
      - name: Setup ssh session to debug
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        with:
          sudo: true