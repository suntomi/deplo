# generated by deplo CLI https://github.com/suntomi/deplo don't edit by hand.
name: Deplo CI/CD

on: 
  push:
    branches: ["lab","main"]
    tags: ["[0-9]*"]
  pull_request:
    branches: ["lab","main"]
  repository_dispatch:
    types: [deplo-run-remote-job]

env:
  DEPLO_GHACTION_CI_ID: ${{ github.run_id }}-${{ github.run_attempt }}
  DEPLO_GHACTION_PR_URL: ${{ github.event.pull_request.url }}
  DEPLO_GHACTION_EVENT_TYPE: ${{ github.event.action }}
  DEPLO_GHACTION_EVENT_PAYLOAD: ${{ toJSON(github.event.client_payload) }}
  DEPLO_OVERWRITE_COMMIT: ${{ github.event.client_payload.commit }}
  DEPLO_OVERWRITE_RELEASE_TARGET: ${{ github.event.client_payload.release_target }}
  DEPLO_OVERWRITE_VERBOSITY: ${{ github.event.client_payload.verbosity }}
  DEPLO_OVERWRITE_WORKFLOW: ${{ github.event.client_payload.workflow }}
  SUNTOMI_VCS_ACCOUNT: ${{ secrets.SUNTOMI_VCS_ACCOUNT }}
  SUNTOMI_VCS_ACCOUNT_EMAIL: ${{ secrets.SUNTOMI_VCS_ACCOUNT_EMAIL }}
  SUNTOMI_VCS_ACCOUNT_KEY: ${{ secrets.SUNTOMI_VCS_ACCOUNT_KEY }}
  SUNTOMI_VCS_APP_PKEY: ${{ secrets.SUNTOMI_VCS_APP_PKEY }}
  SUNTOMI_VCS_APP_ID: ${{ secrets.SUNTOMI_VCS_APP_ID }}
jobs:
  deplo-main:
    name: Start CI ${{ github.event.client_payload.job_id }}
    runs-on: ubuntu-latest
    outputs:
      base: ${{ steps.deplo-ci-kick.outputs.base }}
      builder: ${{ steps.deplo-ci-kick.outputs.builder }}
      config: ${{ steps.deplo-ci-kick.outputs.config }}
      latest: ${{ steps.deplo-ci-kick.outputs.latest }}
      mac: ${{ steps.deplo-ci-kick.outputs.mac }}
      product: ${{ steps.deplo-ci-kick.outputs.product }}
      test: ${{ steps.deplo-ci-kick.outputs.test }}
      win: ${{ steps.deplo-ci-kick.outputs.win }}
    steps:
      - name: Fetch deplo cli
        run: |
          curl -L https://github.com/suntomi/deplo/releases/download/nightly/deplo-Linux -o /usr/local/bin/deplo
          chmod +x /usr/local/bin/deplo
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          ref: ${{ github.event.client_payload.commit }}
      - name: Start deplo
        id: deplo-ci-kick
        run: deplo ci kick
      - name: Setup ssh session to debug
        if: ${{ failure() }}
        uses: umegaya/action-tmate@a3d459813f3429bd95fc48bcd980b2fb40f10ad0
        with:
          sudo: true
  deplo-finish:
    name: Cleanup CI
    if: ${{ !failure() && (needs.base.outputs.need-cleanup || needs.builder.outputs.need-cleanup || needs.config.outputs.need-cleanup || needs.latest.outputs.need-cleanup || needs.mac.outputs.need-cleanup || needs.product.outputs.need-cleanup || needs.test.outputs.need-cleanup || needs.win.outputs.need-cleanup) }}
    needs: ["deplo-main","base","builder","config","latest","mac","product","test","win"]
    runs-on: ubuntu-latest
    env:
      DEPLO_JOB_SYSTEM_OUTPUT_BASE: ${{ needs.base.outputs.system }}
      DEPLO_JOB_SYSTEM_OUTPUT_BUILDER: ${{ needs.builder.outputs.system }}
      DEPLO_JOB_SYSTEM_OUTPUT_CONFIG: ${{ needs.config.outputs.system }}
      DEPLO_JOB_SYSTEM_OUTPUT_LATEST: ${{ needs.latest.outputs.system }}
      DEPLO_JOB_SYSTEM_OUTPUT_MAC: ${{ needs.mac.outputs.system }}
      DEPLO_JOB_SYSTEM_OUTPUT_PRODUCT: ${{ needs.product.outputs.system }}
      DEPLO_JOB_SYSTEM_OUTPUT_TEST: ${{ needs.test.outputs.system }}
      DEPLO_JOB_SYSTEM_OUTPUT_WIN: ${{ needs.win.outputs.system }}
    steps:
      - name: Fetch deplo cli
        run: |
          curl -L https://github.com/suntomi/deplo/releases/download/nightly/deplo-Linux -o /usr/local/bin/deplo
          chmod +x /usr/local/bin/deplo
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          lfs: false
          ref: ${{ github.event.client_payload.commit }}
      - name: Cleanup deplo
        id: deplo-ci-fin
        run: deplo ci fin
      - name: Setup ssh session to debug
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        with:
          sudo: true
  base:
    needs: [deplo-main]
    if: ${{ needs.deplo-main.outputs.base && !failure() }}
    name: Running job base
    runs-on: ubuntu-latest
  
  
    outputs:
      need-cleanup: ${{ steps.deplo-base.outputs.need-cleanup }}
      system: ${{ steps.deplo-base.outputs.system }}
      user: ${{ steps.deplo-base.outputs.user }}
    steps:
      - name: Fetch deplo cli
        run: |
          curl -L https://github.com/suntomi/deplo/releases/download/nightly/deplo-Linux -o /usr/local/bin/deplo
          chmod +x /usr/local/bin/deplo
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          ref: ${{ github.event.client_payload.commit }}
  
      - name: base
        id: deplo-base
        run: deplo run base
      - name: Setup ssh session to debug
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        with:
          sudo: true
  builder:
    needs: [deplo-main]
    if: ${{ needs.deplo-main.outputs.builder && !failure() }}
    name: Running job builder
    runs-on: ubuntu-latest
  
  
    outputs:
      need-cleanup: ${{ steps.deplo-builder.outputs.need-cleanup }}
      system: ${{ steps.deplo-builder.outputs.system }}
      user: ${{ steps.deplo-builder.outputs.user }}
    steps:
      - name: Fetch deplo cli
        run: |
          curl -L https://github.com/suntomi/deplo/releases/download/nightly/deplo-Linux -o /usr/local/bin/deplo
          chmod +x /usr/local/bin/deplo
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          ref: ${{ github.event.client_payload.commit }}
  
      - name: builder
        id: deplo-builder
        run: deplo run builder
      - name: Setup ssh session to debug
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        with:
          sudo: true
  config:
    needs: [deplo-main]
    if: ${{ needs.deplo-main.outputs.config && !failure() }}
    name: Running job config
    runs-on: ubuntu-latest
  
  
    outputs:
      need-cleanup: ${{ steps.deplo-config.outputs.need-cleanup }}
      system: ${{ steps.deplo-config.outputs.system }}
      user: ${{ steps.deplo-config.outputs.user }}
    steps:
      - name: Fetch deplo cli
        run: |
          curl -L https://github.com/suntomi/deplo/releases/download/nightly/deplo-Linux -o /usr/local/bin/deplo
          chmod +x /usr/local/bin/deplo
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          ref: ${{ github.event.client_payload.commit }}
  
      - name: config
        id: deplo-config
        run: deplo run config
      - name: Setup ssh session to debug
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        with:
          sudo: true
  latest:
    needs: ["product","deplo-main"]
    if: ${{ needs.deplo-main.outputs.latest && !failure() }}
    name: Running job latest
    runs-on: ubuntu-latest
    env:
      DEPLO_JOB_USER_OUTPUT_PRODUCT: ${{ needs.product.outputs.user }}
  
    outputs:
      need-cleanup: ${{ steps.deplo-latest.outputs.need-cleanup }}
      system: ${{ steps.deplo-latest.outputs.system }}
      user: ${{ steps.deplo-latest.outputs.user }}
    steps:
      - name: Fetch deplo cli
        run: |
          curl -L https://github.com/suntomi/deplo/releases/download/nightly/deplo-Linux -o /usr/local/bin/deplo
          chmod +x /usr/local/bin/deplo
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          ref: ${{ github.event.client_payload.commit }}
  
      - name: latest
        id: deplo-latest
        run: deplo run latest
      - name: Setup ssh session to debug
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        with:
          sudo: true
  mac:
    needs: ["product","deplo-main"]
    if: ${{ needs.deplo-main.outputs.mac && !failure() }}
    name: Running job mac
    runs-on: macos-latest
    env:
      DEPLO_JOB_USER_OUTPUT_PRODUCT: ${{ needs.product.outputs.user }}
  
    outputs:
      need-cleanup: ${{ steps.deplo-mac.outputs.need-cleanup }}
      system: ${{ steps.deplo-mac.outputs.system }}
      user: ${{ steps.deplo-mac.outputs.user }}
    steps:
      - name: Fetch deplo cli
        run: |
          curl -L https://github.com/suntomi/deplo/releases/download/nightly/deplo-Darwin -o /usr/local/bin/deplo
          chmod +x /usr/local/bin/deplo
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          ref: ${{ github.event.client_payload.commit }}
      - name: Cache cargo
        id: deplo-cache-cargo
        uses: actions/cache@v2
        with:
          path: |
            target
            ~/.cargo/bin
            ~/.cargo/registry/cache
            ~/.cargo/registry/index
            ~/.cargo/git/db
          key: integrate-build-${{ runner.os }}-v1-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Mark cache result
        if: steps.deplo-cache-cargo.outputs.cache-hit == 'true'
        run: echo "DEPLO_CACHE_CARGO_HIT=true" >> $GITHUB_ENV
      - name: mac
        id: deplo-mac
        run: deplo run mac
      - name: Setup ssh session to debug
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        with:
          sudo: true
  product:
    needs: ["builder","deplo-main"]
    if: ${{ needs.deplo-main.outputs.product && !failure() }}
    name: Running job product
    runs-on: ubuntu-latest
    env:
      DEPLO_JOB_USER_OUTPUT_BUILDER: ${{ needs.builder.outputs.user }}
  
    outputs:
      need-cleanup: ${{ steps.deplo-product.outputs.need-cleanup }}
      system: ${{ steps.deplo-product.outputs.system }}
      user: ${{ steps.deplo-product.outputs.user }}
    steps:
      - name: Fetch deplo cli
        run: |
          curl -L https://github.com/suntomi/deplo/releases/download/nightly/deplo-Linux -o /usr/local/bin/deplo
          chmod +x /usr/local/bin/deplo
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          ref: ${{ github.event.client_payload.commit }}
  
      - name: product
        id: deplo-product
        run: deplo run product
      - name: Setup ssh session to debug
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        with:
          sudo: true
  test:
    needs: [deplo-main]
    if: ${{ needs.deplo-main.outputs.test && !failure() }}
    name: Running job test
    runs-on: ubuntu-latest
  
  
    outputs:
      need-cleanup: ${{ steps.deplo-test.outputs.need-cleanup }}
      system: ${{ steps.deplo-test.outputs.system }}
      user: ${{ steps.deplo-test.outputs.user }}
    steps:
      - name: Fetch deplo cli
        run: |
          curl -L https://github.com/suntomi/deplo/releases/download/nightly/deplo-Linux -o /usr/local/bin/deplo
          chmod +x /usr/local/bin/deplo
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          ref: ${{ github.event.client_payload.commit }}
      - name: Cache cargo
        id: deplo-cache-cargo
        uses: actions/cache@v2
        with:
          path: |
            target
            ~/.cargo/bin
            ~/.cargo/registry/cache
            ~/.cargo/registry/index
            ~/.cargo/git/db
          key: integrate-build-${{ runner.os }}-v1-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Mark cache result
        if: steps.deplo-cache-cargo.outputs.cache-hit == 'true'
        run: echo "DEPLO_CACHE_CARGO_HIT=true" >> $GITHUB_ENV
      - name: test
        id: deplo-test
        run: deplo run test
      - name: Setup ssh session to debug
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        with:
          sudo: true
  win:
    needs: ["product","deplo-main"]
    if: ${{ needs.deplo-main.outputs.win && !failure() }}
    name: Running job win
    runs-on: windows-latest
    env:
      DEPLO_JOB_USER_OUTPUT_PRODUCT: ${{ needs.product.outputs.user }}
  
    outputs:
      need-cleanup: ${{ steps.deplo-win.outputs.need-cleanup }}
      system: ${{ steps.deplo-win.outputs.system }}
      user: ${{ steps.deplo-win.outputs.user }}
    steps:
      - name: Fetch deplo cli
        run: |
          curl -L https://github.com/suntomi/deplo/releases/download/nightly/deplo-Windows.exe -o /usr/bin/deplo
          chmod +x /usr/bin/deplo
        shell: bash
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          ref: ${{ github.event.client_payload.commit }}
      - name: Cache cargo
        id: deplo-cache-cargo
        uses: actions/cache@v2
        with:
          path: |
            target
            ~/.cargo/bin
            ~/.cargo/registry/cache
            ~/.cargo/registry/index
            ~/.cargo/git/db
          key: integrate-build-${{ runner.os }}-v1-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Mark cache result
        if: steps.deplo-cache-cargo.outputs.cache-hit == 'true'
        run: echo "DEPLO_CACHE_CARGO_HIT=true" >> $GITHUB_ENV
      - name: win
        id: deplo-win
        run: deplo run win
        shell: bash
      - name: Setup ssh session to debug
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        with:
          sudo: true